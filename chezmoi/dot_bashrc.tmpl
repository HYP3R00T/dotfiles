{{- $variant := .chezmoi.config.scriptEnv.variant | default "workstation" -}}
{{- $install := (index .data.variants $variant).install | default dict -}}

#!/usr/bin/env bash

# History settings
HISTSIZE=2000
HISTFILE=~/.bash_history
HISTCONTROL=ignoredups:erasedups
HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history"
shopt -s histappend
PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# Completion
if [ -f /etc/bash_completion ]; then
  source /etc/bash_completion
fi

# Keybindings (limited compared to Zsh)
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[1;5C": forward-word'
bind '"\e[1;5D": backward-word'
bind '"\C-?": backward-delete-char'

# Aliases
alias ls='ls --color=auto'
alias py='python3'
alias pya='source ./.venv/bin/activate'
<<<<<<< HEAD
=======



>>>>>>> 59d1648 (feat: add ripgrep installation and configuration across various setups)

# Paths
export PATH="$HOME/.local/share/mise/shims:$HOME/.local/bin:$PATH"

# mise setup
eval "$(mise activate bash)"

{{ if $install.starship }}
# starship setup
if ! command -v starship &>/dev/null; then
    mise use -g starship@latest
    eval "$(mise activate bash)"
fi
eval "$(starship init bash)"
{{ end }}

{{ if $install.kubectl }}
if ! command -v kubectl &>/dev/null; then
    mise use -g kubectl@latest
    eval "$(mise activate bash)"
fi
source <(kubectl completion bash)
<<<<<<< HEAD
alias k="kubectl"
=======
alias k='kubectl'
>>>>>>> 59d1648 (feat: add ripgrep installation and configuration across various setups)
{{ end }}

{{ if $install.terraform }}
if ! command -v terraform &>/dev/null; then
    mise use -g terraform@latest
    eval "$(mise activate bash)"
fi
<<<<<<< HEAD
alias tf="terraform"
=======
alias tf='terraform'
>>>>>>> 59d1648 (feat: add ripgrep installation and configuration across various setups)
{{ end }}

{{ if $install.zoxide }}
if ! command -v zoxide &>/dev/null; then
    mise use -g zoxide@latest
    eval "$(mise activate bash)"
fi
eval "$(zoxide init bash --cmd cd)"
{{ end }}

{{ if $install.fzf }}
if ! command -v fzf &>/dev/null; then
    mise use -g fzf@latest
    eval "$(mise activate bash)"
fi
source <(fzf --bash)
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_OPTS=" \
--color=fg:15,bg:0,hl:14 \
--color=fg+:15,bg+:0,hl+:12 \
--color=info:10,prompt:9,pointer:13 \
--color=marker:10,spinner:13,header:6 \
--multi"
{{ end }}

{{ if $install.bat }}
if ! command -v bat &>/dev/null; then
    mise use -g bat@latest
    eval "$(mise activate bash)"
    bat cache --build
fi
<<<<<<< HEAD
alias cat="bat"
=======
alias cat='bat'
>>>>>>> 59d1648 (feat: add ripgrep installation and configuration across various setups)
{{ end }}

{{ if $install.dust }}
if ! command -v dust &>/dev/null; then
    mise use -g dust@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.fastfetch }}
if ! command -v fastfetch &>/dev/null; then
    mise use -g fastfetch@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.dive }}
if ! command -v dive &>/dev/null; then
    mise use -g dive@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.btop }}
if ! command -v btop &>/dev/null; then
    mise use -g btop@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.eza }}
if ! command -v eza &>/dev/null; then
    mise use -g eza@latest
    eval "$(mise activate bash)"
fi
alias ls="eza -al --icons --group-directories-first --git --time-style=relative"
<<<<<<< HEAD
alias tree="eza --tree"
=======
alias tree="eza --tree --icons"
>>>>>>> 59d1648 (feat: add ripgrep installation and configuration across various setups)
{{ end }}

{{ if $install.ytdlp }}
if ! command -v yt-dlp &>/dev/null; then
    mise use -g yt@latest-dlp
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.shfmt }}
if ! command -v shfmt &>/dev/null; then
    mise use -g shfmt@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.shellcheck }}
if ! command -v shellcheck &>/dev/null; then
    mise use -g shellcheck@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.jq }}
if ! command -v jq &>/dev/null; then
    mise use -g jq@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.jqp }}
if ! command -v jqp &>/dev/null; then
    mise use -g jqp@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.podman }}
if ! command -v podman &>/dev/null; then
    mise use -g podman@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.flux2 }}
if ! command -v flux &>/dev/null; then
    mise use -g flux2@latest
    eval "$(mise activate bash)"
fi
source <(flux completion bash)
{{ end }}

{{ if $install.k9s }}
if ! command -v k9s &>/dev/null; then
    mise use -g k9s@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.vault }}
if ! command -v vault &>/dev/null; then
    mise use -g vault@latest
    eval "$(mise activate bash)"
fi
complete -o nospace -C vault vault
{{ end }}

{{ if $install.direnv }}
if ! command -v direnv &>/dev/null; then
    mise use -g direnv@latest
    eval "$(mise activate bash)"
fi
eval "$(direnv hook bash)"
{{ end }}

{{ if $install.ripgrep }}
if ! command -v rg &>/dev/null; then
    mise use -g ripgrep@latest
    eval "$(mise activate bash)"
fi
{{ end }}

{{ if $install.lazydocker }}
if ! command -v lazydocker &>/dev/null; then
    mise use -g lazydocker@latest
    eval "$(mise activate bash)"
fi
alias ld=lazydocker
{{ end }}

{{ if $install.uv }}
if ! command -v uv &>/dev/null; then
    mise use -g uv@latest
    eval "$(mise activate bash)"
fi
eval "$(uv generate-shell-completion bash)"
eval "$(uvx --generate-shell-completion bash)"
{{ end }}

{{ if $install.pnpm }}
if ! command -v pnpm &>/dev/null; then
    mise use -g pnpm@latest
    eval "$(mise activate bash)"
fi
{{ end }}
